{
  "version": 3,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 20,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "base",
      "description": "Base preset",
      "hidden": true,
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "environment": {
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      },
      "cacheVariables": {
        "CPM_SOURCE_CACHE": "~/.cache/CPM",
        "USE_CCACHE": "ON",
        "ASAP_BUILD_TESTS": "ON",
        "ASAP_BUILD_EXAMPLES": "ON"
      }
    },
    {
      "name": "debug",
      "description": "Debug build",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug"
      }
    },
    {
      "name": "release",
      "description": "Release build",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "ASAP_BUILD_EXAMPLES": "OFF"
      }
    },
    {
      "name": "x64",
      "description": "64bit build (on windows)",
      "hidden": true,
      "architecture": {
        "value": "x64",
        "strategy": "external"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "code-coverage",
      "description": "Add code coverage to the build",
      "hidden": true,
      "cacheVariables": {
        "CODE_COVERAGE": "ON"
      },
      "condition": {
        "type": "inList",
        "string": "${hostSystemName}",
        "list": [
          "Linux",
          "Darwin"
        ]
      }
    },
    {
      "name": "compiler-clang",
      "hidden": true,
      "description": "Use clang as the C/C++ compiler",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "/usr/bin/clang",
        "CMAKE_CXX_COMPILER": "/usr/bin/clang++"
      },
      "condition": {
        "type": "inList",
        "string": "${hostSystemName}",
        "list": [
          "Linux",
          "Darwin"
        ]
      }
    },
    {
      "name": "compiler-gcc",
      "hidden": true,
      "description": "Use GCC as the C/C++ compiler",
      "cacheVariables": {
        "CMAKE_C_COMPILER": "/usr/bin/gcc",
        "CMAKE_CXX_COMPILER": "/usr/bin/g++"
      },
      "condition": {
        "type": "inList",
        "string": "${hostSystemName}",
        "list": [
          "Linux",
          "Darwin"
        ]
      }
    },
    {
      "name": "dev-windows",
      "description": "Default build in a dev environment",
      "inherits": [
        "base",
        "debug",
        "x64"
      ],
      "environment": {
        "caexcludepath": "${sourceDir}/third_party;${sourceDir}/out;$env{userprofile}/.cache/CPM"
      }
    },
    {
      "name": "dev-linux",
      "description": "Default build in a dev environment",
      "inherits": [
        "base",
        "debug",
        "compiler-clang",
        "code-coverage"
      ],
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "LinuxWSL"
        }
      }
    },
    {
      "name": "dev-mac",
      "description": "Default build in a dev environment",
      "inherits": [
        "base",
        "debug",
        "compiler-clang",
        "code-coverage"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Darwin"
      }
    },
    {
      "name": "dev-clang",
      "description": "Basic build in a dev environment using clang",
      "inherits": [
        "base",
        "debug",
        "compiler-clang",
        "code-coverage"
      ],
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "LinuxWSL"
        }
      }
    },
    {
      "name": "dev-gcc",
      "description": "Basic build in a dev environment using clang",
      "inherits": [
        "base",
        "debug",
        "compiler-gcc",
        "code-coverage"
      ],
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "LinuxWSL"
        }
      }
    },
    {
      "name": "dev-valgrind",
      "description": "Builds targets with valgrind profiles added",
      "inherits": [
        "base",
        "debug",
        "compiler-clang"
      ],
      "cacheVariables": {
        "CODE_COVERAGE": "OFF",
        "ASAP_WITH_VALGRIND": "ON"
      },
      "condition": {
        "type": "inList",
        "string": "${hostSystemName}",
        "list": [
          "Linux",
          "Darwin"
        ]
      },
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "LinuxWSL"
        }
      }
    },
    {
      "name": "dev-sanitizers",
      "description": "Builds targets with Google ASAN and UBSAN sanitizers added",
      "inherits": [
        "base",
        "debug",
        "compiler-clang"
      ],
      "cacheVariables": {
        "CODE_COVERAGE": "OFF",
        "ASAP_WITH_GOOGLE_ASAN": "ON",
        "ASAP_WITH_GOOGLE_UBSAN": "ON"
      },
      "condition": {
        "type": "inList",
        "string": "${hostSystemName}",
        "list": [
          "Linux",
          "Darwin"
        ]
      },
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "LinuxWSL"
        }
      }
    },
    {
      "name": "dev-sanitizers-thread",
      "description": "Builds targets with Google thread sanitizer added",
      "inherits": [
        "base",
        "debug",
        "compiler-clang"
      ],
      "cacheVariables": {
        "ASAP_WITH_GOOGLE_TSAN": "ON"
      },
      "condition": {
        "type": "inList",
        "string": "${hostSystemName}",
        "list": [
          "Linux",
          "Darwin"
        ]
      },
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "LinuxWSL"
        }
      }
    },
    {
      "name": "rel-windows",
      "description": "Default build in a dev environment",
      "inherits": [
        "base",
        "release",
        "x64"
      ]
    },
    {
      "name": "rel-linux",
      "description": "Default build in a dev environment",
      "inherits": [
        "base",
        "release",
        "compiler-clang"
      ],
      "vendor": {
        "jetbrains.com/clion": {
          "toolchain": "LinuxWSL"
        }
      }
    },
    {
      "name": "rel-mac",
      "description": "Default build in a dev environment",
      "inherits": [
        "base",
        "release",
        "compiler-clang"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Darwin"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "dev-base",
      "hidden": true,
      "jobs": 4,
      "verbose": false
    },
    {
      "name": "dev-windows",
      "configurePreset": "dev-windows",
      "inherits": [
        "dev-base"
      ]
    },
    {
      "name": "dev-clang",
      "configurePreset": "dev-clang",
      "inherits": [
        "dev-base"
      ]
    },
    {
      "name": "dev-linux",
      "configurePreset": "dev-linux",
      "inherits": [
        "dev-clang"
      ]
    },
    {
      "name": "dev-mac",
      "configurePreset": "dev-mac",
      "inherits": [
        "dev-clang"
      ]
    },
    {
      "name": "dev-gcc",
      "configurePreset": "dev-gcc",
      "inherits": [
        "dev-base"
      ]
    },
    {
      "name": "dev-valgrind",
      "configurePreset": "dev-valgrind",
      "inherits": [
        "dev-base"
      ]
    },
    {
      "name": "dev-sanitizers",
      "configurePreset": "dev-sanitizers",
      "inherits": [
        "dev-base"
      ]
    },
    {
      "name": "dev-sanitizers-thread",
      "configurePreset": "dev-sanitizers-thread",
      "inherits": [
        "dev-base"
      ]
    },
    {
      "name": "rel-base",
      "hidden": true,
      "jobs": 4,
      "cleanFirst": true,
      "verbose": true
    },
    {
      "name": "rel-windows",
      "configurePreset": "rel-windows",
      "inherits": [
        "rel-base"
      ]
    },
    {
      "name": "rel-linux",
      "configurePreset": "rel-linux",
      "inherits": [
        "rel-base"
      ]
    },
    {
      "name": "rel-mac",
      "configurePreset": "rel-mac",
      "inherits": [
        "rel-base"
      ]
    }
  ],
  "testPresets": [
    {
      "name": "test-base",
      "description": "Enable output on failure",
      "hidden": true,
      "output": {
        "outputOnFailure": true
      }
    },
    {
      "name": "dev-test-windows",
      "inherits": "test-base",
      "configurePreset": "dev-windows"
    },
    {
      "name": "rel-test-windows",
      "inherits": "test-base",
      "configurePreset": "rel-windows"
    },
    {
      "name": "dev-test-linux",
      "inherits": "test-base",
      "configurePreset": "dev-linux"
    },
    {
      "name": "rel-test-linux",
      "inherits": "test-base",
      "configurePreset": "rel-linux"
    },
    {
      "name": "dev-test-mac",
      "inherits": "test-base",
      "configurePreset": "dev-mac"
    },
    {
      "name": "rel-test-mac",
      "inherits": "test-base",
      "configurePreset": "rel-mac"
    },
    {
      "name": "dev-test-clang",
      "inherits": "test-base",
      "configurePreset": "dev-clang"
    },
    {
      "name": "dev-test-gcc",
      "inherits": "test-base",
      "configurePreset": "dev-gcc"
    }
  ]
}
